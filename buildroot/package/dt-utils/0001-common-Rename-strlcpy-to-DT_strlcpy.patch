From 3d229cc0f8dc81335c53b1f7471ef82ef2f6e570 Mon Sep 17 00:00:00 2001
From: Marcin Niestroj <m.niestroj@grinn-global.com>
Date: Fri, 23 Jun 2017 11:11:04 +0200
Subject: [PATCH] common: Rename strlcpy to DT_strlcpy
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

strlcpy function is defined in uClibc library, causing "static
declaration of ‘strlcpy’ follows non-static declaration" build
errors.

Rename internal strlcpy function to DT_strlcpy to avoid conflicts.

Signed-off-by: Marcin Niestroj <m.niestroj@grinn-global.com>
---
 src/dt/common.h | 4 ++--
 src/libdt.c     | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/dt/common.h b/src/dt/common.h
index f6bad44..992e28f 100644
--- a/src/dt/common.h
+++ b/src/dt/common.h
@@ -168,7 +168,7 @@ static inline char *barebox_asprintf(const char *fmt, ...)
 #define basprintf(fmt, arg...) barebox_asprintf(fmt, ##arg)
 
 /**
- * strlcpy - Copy a %NUL terminated string into a sized buffer
+ * DT_strlcpy - Copy a %NUL terminated string into a sized buffer
  * @dest: Where to copy the string to
  * @src: Where to copy the string from
  * @size: size of destination buffer
@@ -178,7 +178,7 @@ static inline char *barebox_asprintf(const char *fmt, ...)
  * of course, the buffer size is zero). It does not pad
  * out the result like strncpy() does.
  */
-static inline size_t strlcpy(char *dest, const char *src, size_t size)
+static inline size_t DT_strlcpy(char *dest, const char *src, size_t size)
 {
 	size_t ret = strlen(src);
 
diff --git a/src/libdt.c b/src/libdt.c
index 4db5160..3adeed2 100644
--- a/src/libdt.c
+++ b/src/libdt.c
@@ -1503,7 +1503,7 @@ int of_modalias_node(struct device_node *node, char *modalias, int len)
 	if (!compatible || strlen(compatible) > cplen)
 		return -ENODEV;
 	p = strchr(compatible, ',');
-	strlcpy(modalias, p ? p + 1 : compatible, len);
+	DT_strlcpy(modalias, p ? p + 1 : compatible, len);
 	return 0;
 }
 
-- 
2.13.1

