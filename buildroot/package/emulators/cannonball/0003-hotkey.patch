diff --git a/src/main/frontend/config.cpp b/src/main/frontend/config.cpp
index 0427bd3..d235e2e 100644
--- a/src/main/frontend/config.cpp
+++ b/src/main/frontend/config.cpp
@@ -69,36 +69,36 @@ void Config::load(const std::string &filename)
     // Menu Settings
     // ------------------------------------------------------------------------
 
-    menu.enabled           = pt_config.get("menu.enabled",   1);
-    menu.road_scroll_speed = pt_config.get("menu.roadspeed", 50);
+    menu.enabled           = pt_config.get("config.menu.enabled",   1);
+    menu.road_scroll_speed = pt_config.get("config.menu.roadspeed", 50);
 
     // ------------------------------------------------------------------------
     // Video Settings
     // ------------------------------------------------------------------------
    
-    video.mode       = pt_config.get("video.mode",               0); // Video Mode: Default is Windowed 
-    video.scale      = pt_config.get("video.window.scale",       2); // Video Scale: Default is 2x    
-    video.scanlines  = pt_config.get("video.scanlines",          0); // Scanlines
-    video.fps        = pt_config.get("video.fps",                2); // Default is 60 fps
-    video.fps_count  = pt_config.get("video.fps_counter",        0); // FPS Counter
-    video.widescreen = pt_config.get("video.widescreen",         1); // Enable Widescreen Mode
-    video.hires      = pt_config.get("video.hires",              0); // Hi-Resolution Mode
-    video.filtering  = pt_config.get("video.filtering",          0); // Open GL Filtering Mode
+    video.mode       = pt_config.get("config.video.mode",               0); // Video Mode: Default is Windowed 
+    video.scale      = pt_config.get("config.video.window.scale",       2); // Video Scale: Default is 2x    
+    video.scanlines  = pt_config.get("config.video.scanlines",          0); // Scanlines
+    video.fps        = pt_config.get("config.video.fps",                2); // Default is 60 fps
+    video.fps_count  = pt_config.get("config.video.fps_counter",        0); // FPS Counter
+    video.widescreen = pt_config.get("config.video.widescreen",         1); // Enable Widescreen Mode
+    video.hires      = pt_config.get("config.video.hires",              0); // Hi-Resolution Mode
+    video.filtering  = pt_config.get("config.video.filtering",          0); // Open GL Filtering Mode
           
     set_fps(video.fps);
 
     // ------------------------------------------------------------------------
     // Sound Settings
     // ------------------------------------------------------------------------
-    sound.enabled     = pt_config.get("sound.enable",      1);
-    sound.advertise   = pt_config.get("sound.advertise",   1);
-    sound.preview     = pt_config.get("sound.preview",     1);
-    sound.fix_samples = pt_config.get("sound.fix_samples", 1);
+    sound.enabled     = pt_config.get("config.sound.enable",      1);
+    sound.advertise   = pt_config.get("config.sound.advertise",   1);
+    sound.preview     = pt_config.get("config.sound.preview",     1);
+    sound.fix_samples = pt_config.get("config.sound.fix_samples", 1);
 
     // Custom Music
     for (int i = 0; i < 4; i++)
     {
-        std::string xmltag = "sound.custom_music.track";
+        std::string xmltag = "config.sound.custom_music.track";
         xmltag += Utils::to_string(i+1);  
 
         sound.custom_music[i].enabled = pt_config.get(xmltag + ".<xmlattr>.enabled", 0);
@@ -109,141 +109,143 @@ void Config::load(const std::string &filename)
     // ------------------------------------------------------------------------
     // CannonBoard Settings
     // ------------------------------------------------------------------------
-    cannonboard.enabled = pt_config.get("cannonboard.<xmlattr>.enabled", 0);
-    cannonboard.port    = pt_config.get("cannonboard.port", "COM6");
-    cannonboard.baud    = pt_config.get("cannonboard.baud", 57600);
-    cannonboard.debug   = pt_config.get("cannonboard.debug", 0);
-    cannonboard.cabinet = pt_config.get("cannonboard.cabinet", 0);
+    cannonboard.enabled = pt_config.get("config.cannonboard.<xmlattr>.enabled", 0);
+    cannonboard.port    = pt_config.get("config.cannonboard.port", "COM6");
+    cannonboard.baud    = pt_config.get("config.cannonboard.baud", 57600);
+    cannonboard.debug   = pt_config.get("config.cannonboard.debug", 0);
+    cannonboard.cabinet = pt_config.get("config.cannonboard.cabinet", 0);
 
     // ------------------------------------------------------------------------
     // Controls
     // ------------------------------------------------------------------------
-    controls.gear          = pt_config.get("controls.gear", 0);
-    controls.steer_speed   = pt_config.get("controls.steerspeed", 3);
-    controls.pedal_speed   = pt_config.get("controls.pedalspeed", 4);
-    controls.keyconfig[0]  = pt_config.get("controls.keyconfig.up",    273);
-    controls.keyconfig[1]  = pt_config.get("controls.keyconfig.down",  274);
-    controls.keyconfig[2]  = pt_config.get("controls.keyconfig.left",  276);
-    controls.keyconfig[3]  = pt_config.get("controls.keyconfig.right", 275);
-    controls.keyconfig[4]  = pt_config.get("controls.keyconfig.acc",   122);
-    controls.keyconfig[5]  = pt_config.get("controls.keyconfig.brake", 120);
-    controls.keyconfig[6]  = pt_config.get("controls.keyconfig.gear1", 32);
-    controls.keyconfig[7]  = pt_config.get("controls.keyconfig.gear2", 32);
-    controls.keyconfig[8]  = pt_config.get("controls.keyconfig.start", 49);
-    controls.keyconfig[9]  = pt_config.get("controls.keyconfig.coin",  53);
-    controls.keyconfig[10] = pt_config.get("controls.keyconfig.menu",  286);
-    controls.keyconfig[11] = pt_config.get("controls.keyconfig.view",  304);
-    controls.padconfig[0]  = pt_config.get("controls.padconfig.acc",   0);
-    controls.padconfig[1]  = pt_config.get("controls.padconfig.brake", 1);
-    controls.padconfig[2]  = pt_config.get("controls.padconfig.gear1", 2);
-    controls.padconfig[3]  = pt_config.get("controls.padconfig.gear2", 2);
-    controls.padconfig[4]  = pt_config.get("controls.padconfig.start", 3);
-    controls.padconfig[5]  = pt_config.get("controls.padconfig.coin",  4);
-    controls.padconfig[6]  = pt_config.get("controls.padconfig.menu",  5);
-    controls.padconfig[7]  = pt_config.get("controls.padconfig.view",  6);
-    controls.analog        = pt_config.get("controls.analog.<xmlattr>.enabled", 0);
-    controls.pad_id        = pt_config.get("controls.pad_id", 0);
-    controls.axis[0]       = pt_config.get("controls.analog.axis.wheel", 0);
-    controls.axis[1]       = pt_config.get("controls.analog.axis.accel", 2);
-    controls.axis[2]       = pt_config.get("controls.analog.axis.brake", 3);
-    controls.asettings[0]  = pt_config.get("controls.analog.wheel.zone", 75);
-    controls.asettings[1]  = pt_config.get("controls.analog.wheel.dead", 0);
-    controls.asettings[2]  = pt_config.get("controls.analog.pedals.dead", 0);
+    controls.gear          = pt_config.get("config.controls.gear", 0);
+    controls.steer_speed   = pt_config.get("config.controls.steerspeed", 3);
+    controls.pedal_speed   = pt_config.get("config.controls.pedalspeed", 4);
+    controls.keyconfig[0]  = pt_config.get("config.controls.keyconfig.up",    273);
+    controls.keyconfig[1]  = pt_config.get("config.controls.keyconfig.down",  274);
+    controls.keyconfig[2]  = pt_config.get("config.controls.keyconfig.left",  276);
+    controls.keyconfig[3]  = pt_config.get("config.controls.keyconfig.right", 275);
+    controls.keyconfig[4]  = pt_config.get("config.controls.keyconfig.acc",   122);
+    controls.keyconfig[5]  = pt_config.get("config.controls.keyconfig.brake", 120);
+    controls.keyconfig[6]  = pt_config.get("config.controls.keyconfig.gear1", 32);
+    controls.keyconfig[7]  = pt_config.get("config.controls.keyconfig.gear2", 32);
+    controls.keyconfig[8]  = pt_config.get("config.controls.keyconfig.start", 49);
+    controls.keyconfig[9]  = pt_config.get("config.controls.keyconfig.coin",  53);
+    controls.keyconfig[10] = pt_config.get("config.controls.keyconfig.menu",  286);
+    controls.keyconfig[11] = pt_config.get("config.controls.keyconfig.view",  304);
+    controls.padconfig[0]  = pt_config.get("config.controls.padconfig.acc",   0);
+    controls.padconfig[1]  = pt_config.get("config.controls.padconfig.brake", 1);
+    controls.padconfig[2]  = pt_config.get("config.controls.padconfig.gear1", 2);
+    controls.padconfig[3]  = pt_config.get("config.controls.padconfig.gear2", 2);
+    controls.padconfig[4]  = pt_config.get("config.controls.padconfig.start", 3);
+    controls.padconfig[5]  = pt_config.get("config.controls.padconfig.coin",  4);
+    controls.padconfig[6]  = pt_config.get("config.controls.padconfig.menu",  5);
+    controls.padconfig[7]  = pt_config.get("config.controls.padconfig.view",  6);
+    controls.padconfig[8]  = pt_config.get("config.controls.padconfig.hotkey",  7);
+    controls.analog        = pt_config.get("config.controls.analog.<xmlattr>.enabled", 0);
+    controls.pad_id        = pt_config.get("config.controls.pad_id", 0);
+    controls.axis[0]       = pt_config.get("config.controls.analog.axis.wheel", 0);
+    controls.axis[1]       = pt_config.get("config.controls.analog.axis.accel", 2);
+    controls.axis[2]       = pt_config.get("config.controls.analog.axis.brake", 3);
+    controls.asettings[0]  = pt_config.get("config.controls.analog.wheel.zone", 75);
+    controls.asettings[1]  = pt_config.get("config.controls.analog.wheel.dead", 0);
+    controls.asettings[2]  = pt_config.get("config.controls.analog.pedals.dead", 0);
     
-    controls.haptic        = pt_config.get("controls.analog.haptic.<xmlattr>.enabled", 0);
-    controls.max_force     = pt_config.get("controls.analog.haptic.max_force", 9000);
-    controls.min_force     = pt_config.get("controls.analog.haptic.min_force", 8500);
-    controls.force_duration= pt_config.get("controls.analog.haptic.force_duration", 20);
+    controls.haptic        = pt_config.get("config.controls.analog.haptic.<xmlattr>.enabled", 0);
+    controls.max_force     = pt_config.get("config.controls.analog.haptic.max_force", 9000);
+    controls.min_force     = pt_config.get("config.controls.analog.haptic.min_force", 8500);
+    controls.force_duration= pt_config.get("config.controls.analog.haptic.force_duration", 20);
 
     // ------------------------------------------------------------------------
     // Engine Settings
     // ------------------------------------------------------------------------
 
-    engine.dip_time      = pt_config.get("engine.time",    0);
-    engine.dip_traffic   = pt_config.get("engine.traffic", 1);
+    engine.dip_time      = pt_config.get("config.engine.time",    0);
+    engine.dip_traffic   = pt_config.get("config.engine.traffic", 1);
     
     engine.freeze_timer    = engine.dip_time == 4;
     engine.disable_traffic = engine.dip_traffic == 4;
     engine.dip_time    &= 3;
     engine.dip_traffic &= 3;
 
-    engine.freeplay      = pt_config.get("engine.freeplay",        0) != 0;
-    engine.jap           = pt_config.get("engine.japanese_tracks", 0);
-    engine.prototype     = pt_config.get("engine.prototype",       0);
+    engine.freeplay      = pt_config.get("config.engine.freeplay",        0) != 0;
+    engine.jap           = pt_config.get("config.engine.japanese_tracks", 0);
+    engine.prototype     = pt_config.get("config.engine.prototype",       0);
     
     // Additional Level Objects
-    engine.level_objects   = pt_config.get("engine.levelobjects", 1);
-    engine.randomgen       = pt_config.get("engine.randomgen",    1);
+    engine.level_objects   = pt_config.get("config.engine.levelobjects", 1);
+    engine.randomgen       = pt_config.get("config.engine.randomgen",    1);
     engine.fix_bugs_backup = 
-    engine.fix_bugs        = pt_config.get("engine.fix_bugs",     1) != 0;
-    engine.fix_timer       = pt_config.get("engine.fix_timer",    0) != 0;
-    engine.layout_debug    = pt_config.get("engine.layout_debug", 0) != 0;
-    engine.new_attract     = pt_config.get("engine.new_attract", 1) != 0;
+    engine.fix_bugs        = pt_config.get("config.engine.fix_bugs",     1) != 0;
+    engine.fix_timer       = pt_config.get("config.engine.fix_timer",    0) != 0;
+    engine.layout_debug    = pt_config.get("config.engine.layout_debug", 0) != 0;
+    engine.new_attract     = pt_config.get("config.engine.new_attract", 1) != 0;
 
     // ------------------------------------------------------------------------
     // Time Trial Mode
     // ------------------------------------------------------------------------
 
-    ttrial.laps    = pt_config.get("time_trial.laps",    5);
-    ttrial.traffic = pt_config.get("time_trial.traffic", 3);
+    ttrial.laps    = pt_config.get("config.time_trial.laps",    5);
+    ttrial.traffic = pt_config.get("config.time_trial.traffic", 3);
 
-    cont_traffic   = pt_config.get("continuous.traffic", 3);
+    cont_traffic   = pt_config.get("config.continuous.traffic", 3);
 }
 
 bool Config::save(const std::string &filename)
 {
     // Save stuff
-    pt_config.put("video.mode",               video.mode);
-    pt_config.put("video.window.scale",       video.scale);
-    pt_config.put("video.scanlines",          video.scanlines);
-    pt_config.put("video.fps",                video.fps);
-    pt_config.put("video.widescreen",         video.widescreen);
-    pt_config.put("video.hires",              video.hires);
-
-    pt_config.put("sound.enable",             sound.enabled);
-    pt_config.put("sound.advertise",          sound.advertise);
-    pt_config.put("sound.preview",            sound.preview);
-    pt_config.put("sound.fix_samples",        sound.fix_samples);
-
-    pt_config.put("controls.gear",            controls.gear);
-    pt_config.put("controls.steerspeed",      controls.steer_speed);
-    pt_config.put("controls.pedalspeed",      controls.pedal_speed);
-    pt_config.put("controls.keyconfig.up",    controls.keyconfig[0]);
-    pt_config.put("controls.keyconfig.down",  controls.keyconfig[1]);
-    pt_config.put("controls.keyconfig.left",  controls.keyconfig[2]);
-    pt_config.put("controls.keyconfig.right", controls.keyconfig[3]);
-    pt_config.put("controls.keyconfig.acc",   controls.keyconfig[4]);
-    pt_config.put("controls.keyconfig.brake", controls.keyconfig[5]);
-    pt_config.put("controls.keyconfig.gear1", controls.keyconfig[6]);
-    pt_config.put("controls.keyconfig.gear2", controls.keyconfig[7]);
-    pt_config.put("controls.keyconfig.start", controls.keyconfig[8]);
-    pt_config.put("controls.keyconfig.coin",  controls.keyconfig[9]);
-    pt_config.put("controls.keyconfig.menu",  controls.keyconfig[10]);
-    pt_config.put("controls.keyconfig.view",  controls.keyconfig[11]);
-    pt_config.put("controls.padconfig.acc",   controls.padconfig[0]);
-    pt_config.put("controls.padconfig.brake", controls.padconfig[1]);
-    pt_config.put("controls.padconfig.gear1", controls.padconfig[2]);
-    pt_config.put("controls.padconfig.gear2", controls.padconfig[3]);
-    pt_config.put("controls.padconfig.start", controls.padconfig[4]);
-    pt_config.put("controls.padconfig.coin",  controls.padconfig[5]);
-    pt_config.put("controls.padconfig.menu",  controls.padconfig[6]);
-    pt_config.put("controls.padconfig.view",  controls.padconfig[7]);
-    pt_config.put("controls.analog.<xmlattr>.enabled", controls.analog);
-
-    pt_config.put("engine.time", engine.freeze_timer ? 4 : engine.dip_time);
-    pt_config.put("engine.traffic", engine.disable_traffic ? 4 : engine.dip_traffic);
-    pt_config.put("engine.japanese_tracks", engine.jap);
-    pt_config.put("engine.prototype", engine.prototype);
-    pt_config.put("engine.levelobjects", engine.level_objects);
-    pt_config.put("engine.new_attract", engine.new_attract);
-
-    pt_config.put("time_trial.laps",    ttrial.laps);
-    pt_config.put("time_trial.traffic", ttrial.traffic);
-    pt_config.put("continuous.traffic", cont_traffic), 
-
-    ttrial.laps    = pt_config.get("time_trial.laps",    5);
-    ttrial.traffic = pt_config.get("time_trial.traffic", 3);
-    cont_traffic   = pt_config.get("continuous.traffic", 3);
+    pt_config.put("config.video.mode",               video.mode);
+    pt_config.put("config.video.window.scale",       video.scale);
+    pt_config.put("config.video.scanlines",          video.scanlines);
+    pt_config.put("config.video.fps",                video.fps);
+    pt_config.put("config.video.widescreen",         video.widescreen);
+    pt_config.put("config.video.hires",              video.hires);
+
+    pt_config.put("config.sound.enable",             sound.enabled);
+    pt_config.put("config.sound.advertise",          sound.advertise);
+    pt_config.put("config.sound.preview",            sound.preview);
+    pt_config.put("config.sound.fix_samples",        sound.fix_samples);
+
+    pt_config.put("config.controls.gear",            controls.gear);
+    pt_config.put("config.controls.steerspeed",      controls.steer_speed);
+    pt_config.put("config.controls.pedalspeed",      controls.pedal_speed);
+    pt_config.put("config.controls.keyconfig.up",    controls.keyconfig[0]);
+    pt_config.put("config.controls.keyconfig.down",  controls.keyconfig[1]);
+    pt_config.put("config.controls.keyconfig.left",  controls.keyconfig[2]);
+    pt_config.put("config.controls.keyconfig.right", controls.keyconfig[3]);
+    pt_config.put("config.controls.keyconfig.acc",   controls.keyconfig[4]);
+    pt_config.put("config.controls.keyconfig.brake", controls.keyconfig[5]);
+    pt_config.put("config.controls.keyconfig.gear1", controls.keyconfig[6]);
+    pt_config.put("config.controls.keyconfig.gear2", controls.keyconfig[7]);
+    pt_config.put("config.controls.keyconfig.start", controls.keyconfig[8]);
+    pt_config.put("config.controls.keyconfig.coin",  controls.keyconfig[9]);
+    pt_config.put("config.controls.keyconfig.menu",  controls.keyconfig[10]);
+    pt_config.put("config.controls.keyconfig.view",  controls.keyconfig[11]);
+    pt_config.put("config.controls.padconfig.acc",   controls.padconfig[0]);
+    pt_config.put("config.controls.padconfig.brake", controls.padconfig[1]);
+    pt_config.put("config.controls.padconfig.gear1", controls.padconfig[2]);
+    pt_config.put("config.controls.padconfig.gear2", controls.padconfig[3]);
+    pt_config.put("config.controls.padconfig.start", controls.padconfig[4]);
+    pt_config.put("config.controls.padconfig.coin",  controls.padconfig[5]);
+    pt_config.put("config.controls.padconfig.menu",  controls.padconfig[6]);
+    pt_config.put("config.controls.padconfig.view",  controls.padconfig[7]);
+    pt_config.put("config.controls.padconfig.hotkey",  controls.padconfig[8]);
+    pt_config.put("config.controls.analog.<xmlattr>.enabled", controls.analog);
+
+    pt_config.put("config.engine.time", engine.freeze_timer ? 4 : engine.dip_time);
+    pt_config.put("config.engine.traffic", engine.disable_traffic ? 4 : engine.dip_traffic);
+    pt_config.put("config.engine.japanese_tracks", engine.jap);
+    pt_config.put("config.engine.prototype", engine.prototype);
+    pt_config.put("config.engine.levelobjects", engine.level_objects);
+    pt_config.put("config.engine.new_attract", engine.new_attract);
+
+    pt_config.put("config.time_trial.laps",    ttrial.laps);
+    pt_config.put("config.time_trial.traffic", ttrial.traffic);
+    pt_config.put("config.continuous.traffic", cont_traffic), 
+
+    ttrial.laps    = pt_config.get("config.time_trial.laps",    5);
+    ttrial.traffic = pt_config.get("config.time_trial.traffic", 3);
+    cont_traffic   = pt_config.get("config.continuous.traffic", 3);
 
     try
     {
diff --git a/src/main/frontend/config.hpp b/src/main/frontend/config.hpp
index 9357caf..6a8b17b 100644
--- a/src/main/frontend/config.hpp
+++ b/src/main/frontend/config.hpp
@@ -69,7 +69,7 @@ struct controls_settings_t
     int gear;
     int steer_speed;   // Steering Digital Speed
     int pedal_speed;   // Pedal Digital Speed
-    int padconfig[8];  // Joypad Button Config
+    int padconfig[9];  // Joypad Button Config
     int keyconfig[12]; // Keyboard Button Config
     int pad_id;        // Use the N'th joystick on the system.
     int analog;        // Use analog controls
diff --git a/src/main/sdl2/input.cpp b/src/main/sdl2/input.cpp
index ab1a9fc..b435719 100644
--- a/src/main/sdl2/input.cpp
+++ b/src/main/sdl2/input.cpp
@@ -11,6 +11,7 @@
 #include <iostream>
 #include <cstdlib> // abs
 #include "sdl2/input.hpp"
+#include "main.hpp"
 
 Input input;
 
@@ -301,4 +302,8 @@ void Input::handle_joy(const uint8_t button, const bool is_pressed)
 
     if (button == pad_config[7])
         keys[VIEWPOINT] = is_pressed;
+
+    static int hotkey = 0;
+    if (button == pad_config[8]) hotkey = is_pressed ? 1: 0;
+    if (button == pad_config[4] && hotkey == 1) cannonball::state = cannonball::STATE_QUIT;
 }
