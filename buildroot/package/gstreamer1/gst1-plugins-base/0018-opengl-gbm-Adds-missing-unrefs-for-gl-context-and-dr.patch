From 79439f66b94bb7f012c323363a42c50e7ceb3159 Mon Sep 17 00:00:00 2001
From: Freyr666 <sky_rider_93@mail.ru>
Date: Fri, 23 Nov 2018 16:30:30 +0300
Subject: [PATCH 18/45] opengl: gbm: Adds missing unrefs for gl context and drm
 node release in finalizer

This adds a few missing gst_object_unref calls for the opengl context in
gstglwindow_gbm_egl.c, as well as the missing close call for the
drm node fd in gst_gl_display_gbm_finalize.

(cherry picked from commit 5d7ceeae61cf2570eecda2410ac0012092df5121)
Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 gst-libs/gst/gl/gbm/gstgldisplay_gbm.c    |  3 +++
 gst-libs/gst/gl/gbm/gstglwindow_gbm_egl.c | 11 +++++++++--
 2 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/gst-libs/gst/gl/gbm/gstgldisplay_gbm.c b/gst-libs/gst/gl/gbm/gstgldisplay_gbm.c
index 0781812e85..e842046326 100644
--- a/gst-libs/gst/gl/gbm/gstgldisplay_gbm.c
+++ b/gst-libs/gst/gl/gbm/gstgldisplay_gbm.c
@@ -82,6 +82,9 @@ gst_gl_display_gbm_finalize (GObject * object)
   gst_gl_display_gbm_shutdown_gbm (display_gbm);
   gst_gl_display_gbm_shutdown_drm (display_gbm);
 
+  if (display_gbm->drm_fd >= 0)
+    close (display_gbm->drm_fd);
+
   G_OBJECT_CLASS (gst_gl_display_gbm_parent_class)->finalize (object);
 }
 
diff --git a/gst-libs/gst/gl/gbm/gstglwindow_gbm_egl.c b/gst-libs/gst/gl/gbm/gstglwindow_gbm_egl.c
index ec24ef3bad..b0eb258d63 100644
--- a/gst-libs/gst/gl/gbm/gstglwindow_gbm_egl.c
+++ b/gst-libs/gst/gl/gbm/gstglwindow_gbm_egl.c
@@ -155,6 +155,7 @@ draw_cb (gpointer data)
   /* No display connected */
   if (!display->drm_mode_info) {
     GST_ERROR ("No display connected");
+    gst_object_unref (context);
     return;
   };
 
@@ -205,6 +206,7 @@ draw_cb (gpointer data)
 
     if (ret != 0) {
       GST_ERROR ("Could not set DRM CRTC: %s (%d)", g_strerror (errno), errno);
+      gst_object_unref (context);
       /* XXX: it is not possible to communicate the error to the pipeline */
       return;
     }
@@ -305,6 +307,7 @@ gst_gl_window_gbm_init_surface (GstGLWindowGBMEGL * window_egl)
   GstGLContextEGL *context_egl = GST_GL_CONTEXT_EGL (context);
   EGLint gbm_format;
   int hdisplay, vdisplay;
+  gboolean ret = TRUE;
 
   if (drm_mode_info) {
     vdisplay = drm_mode_info->vdisplay;
@@ -320,7 +323,8 @@ gst_gl_window_gbm_init_surface (GstGLWindowGBMEGL * window_egl)
           EGL_NATIVE_VISUAL_ID, &gbm_format)) {
     GST_ERROR ("eglGetConfigAttrib failed: %s",
         gst_egl_get_error_string (eglGetError ()));
-    return FALSE;
+    ret = FALSE;
+    goto cleanup;
   }
 
   /* Create a GBM surface that shall contain the BOs we are
@@ -333,7 +337,10 @@ gst_gl_window_gbm_init_surface (GstGLWindowGBMEGL * window_egl)
 
   GST_DEBUG ("Successfully created GBM surface");
 
-  return TRUE;
+cleanup:
+
+  gst_object_unref (context);
+  return ret;
 }
 
 
-- 
2.11.0

